class Utilisateur {
  /**
   * Récupère un utilisateur en utilisant l'API JSONPlaceholder
   * @param {number} id - L'identifiant de l'utilisateur
   * @returns {Promise<Object>} - La réponse de l'API
   */
  async recupererUtilisateur(id) {
    try {
      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);
      return await response.json();
    } catch (error) {
      console.error(error);
    }
  }

  /**
   * Crée un utilisateur en utilisant l'API JSONPlaceholder
   * @param {Object} utilisateur - Les informations de l'utilisateur à créer
   * @returns {Promise<Object>} - La réponse de l'API
   */
  async creerUtilisateur(utilisateur) {
    try {
      const response = await fetch('https://jsonplaceholder.typicode.com/users', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(utilisateur),
      });
      return await response.json();
    } catch (error) {
      console.error(error);
    }
  }

  /**
   * Met à jour un utilisateur en utilisant l'API JSONPlaceholder
   * @param {number} id - L'identifiant de l'utilisateur à mettre à jour
   * @param {Object} modifications - Les modifications à apporter à l'utilisateur
   * @returns {Promise<Object>} - La réponse de l'API
   */
  async mettreAJourUtilisateur(id, modifications) {
    try {
      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(modifications),
      });
      return await response.json();
    } catch (error) {
      console.error(error);
    }
  }

  /**
   * Supprime un utilisateur en utilisant l'API JSONPlaceholder
   * @param {number} id - L'identifiant de l'utilisateur à supprimer
   * @returns {Promise<Object>} - La réponse de l'API
   */
  async supprimerUtilisateur(id) {
    try {
      const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`, {
        method: 'DELETE',
      });
      return await response.json();
    } catch (error) {
      console.error(error);
    }
  }
}

// Exemple d'utilisation de la classe Utilisateur
const utilisateur = new Utilisateur();

// Récupérer un utilisateur
utilisateur.recupererUtilisateur(1).then((utilisateur) => console.log(utilisateur));

// Créer un utilisateur
const nouveauUtilisateur = {
  name: '',
  username: '',
  email: '',
};
utilisateur.creerUtilisateur(nouveauUtilisateur).then((utilisateur) => console.log(utilisateur));

// Mettre à jour un utilisateur
const modificationsUtilisateur = {
  email: '',
};
utilisateur
  .mettreAJourUtilisateur(1, modificationsUtilisateur)
  .then((utilisateur) => console.log(utilisateur));

// Supprimer un utilisateur
utilisateur.supprimerUtilisateur(1).then((utilisateur) => console.log(utilisateur));